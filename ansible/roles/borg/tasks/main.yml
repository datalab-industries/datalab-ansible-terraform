---
- name: Synchronize borgmatic files to remote
  ansible.posix.synchronize:
    src: "{{ role_path }}/files/"
    dest: "{{ ansible_user_home_dir }}/borgmatic"

- name: Check whether ssh config exists
  ansible.builtin.stat:
    path: "{{ playbook_dir }}/vaults/borg/.ssh/id_ed25519"
  register: ssh_config
  delegate_to: localhost

- name: Set fact for whether borg ssh config exists
  ansible.builtin.set_fact:
    ssh_config_defined: "{{ ssh_config.stat.exists }}"

- name: Sync local ssh config vault remote
  when: ssh_config_defined
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/vaults/borg/.ssh/"
    dest: "{{ ansible_user_home_dir }}/borgmatic/.ssh"
    mode: "0700"

- name: Render Borgmatic configuration
  become: true
  ansible.builtin.template:
    src: config.yaml.j2
    dest: "{{ ansible_user_home_dir }}/borgmatic/config.yaml"
    mode: "0600"
    owner: "{{ ansible_ssh_user }}"

  vars:
    borg_exclude_patterns: []
    borg_exclude_from: []
    borg_install_method: package
    borg_user: "{{ ansible_user }}"
    borg_source_directories:
      - /data
    borgmatic_hooks:
      before_backup:
        - echo "`date` - Starting backup."
      mongodb_databases:
        - name: all
          hostname: datalab-database-1
          port: 27017
    borgmatic_timer: cron
    borg_retention_policy:
      keep_daily: 30
      keep_weekly: 0
      keep_monthly: 12
      keep_yearly: 4
    borg_one_file_system: true
    borgmatic_store_atime: true
    borgmatic_store_ctime: true
    borg_encryption_passcommand: false
    borg_remote_rate_limit: 0
    borg_ssh_command: ssh
    borg_lock_wait_time: 5

- name: Build borgmatic image
  community.docker.docker_image:
    name: datalab-borgmatic
    source: build
    state: present
    force_source: true
    build:
      path: "{{ ansible_user_home_dir }}/borgmatic"

- name: Create borg repository if it does not exist
  ansible.builtin.shell:
    cmd: docker run --network datalab_backend -v {{ ansible_user_home_dir }}/borgmatic/.ssh:/root/.ssh -v /data:/data datalab-borgmatic borgmatic init --encryption=repokey
      -c /etc/borgmatic/config.yaml
    executable: /bin/bash
  register: new_borg_repository
  changed_when: '"Repository already exists" not in new_borg_repository.stdout'
  failed_when: new_borg_repository.rc != 0

- name: Perform first backup if borg repo was just created
  ansible.builtin.shell:
    cmd: docker run --network datalab_backend -v {{ ansible_user_home_dir }}/borgmatic/.ssh:/root/.ssh -v /data:/data datalab-borgmatic # noqa: no-changed-when
    executable: /bin/bash
  when: new_borg_repository.changed # noqa: no-handler

- name: Add Cron job for borgmatic
  ansible.builtin.cron:
    name: borgmatic
    hour: "2"
    minute: "{{ range(0, 59) | random(seed=inventory_hostname) }}"
    user: "{{ ansible_user }}"
    job: docker run --network datalab_backend -v {{ ansible_user_home_dir }}/borgmatic/.ssh:/root/.ssh -v /data:/data datalab-borgmatic
